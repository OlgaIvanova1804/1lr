1)Для начала работы, с официального сайта был установлен Git.

2)Была проведена его первоначальная настройка:
a)было указано имя и адрес электронной почты пользователя, с помощью команд:
	git config --global user.name "имя"
	git config --global user.email "почта"

б)были настроены параметры окончания строки, за счет команд:
	git config --global core.autocrlf true
	git config --global core.safecrlf true

3)Для работы был создан каталог lr1

4)Он был инициализирован в системе git, благодаря команде:
	git init

5)В каталоге был создан текстовый файл отчета в кодировке Win1251.
Он был проиндексирован, то есть добавлен в git среду данного каталога, за счет команды:
	git add "имя файла"

6)Был создан первый коммит, благодаря команде:
	git commit -m "first commit" (в кавычках указывается комментарий к коммиту)
	
7)После добавления в отчет текста, расположенного выше, был создан второй коммит.

8)	a)Игнорирование
Добавим в каталог файл, на котором покажем игнорирование error.txt.
Добавим в каталог файл с расширением .gitignore
	Для этого создадим файл с расширением .txt и поменяем его
Имя игнорируемого файла запишем в .gitignore
Теперь этот файл будет игнорироваться системой
Проверить это можно с помощью каманды:
	git status --ignored

	б)Сравнение
Для  сравнения изменений в рабочей директории, используется команда:
	git diff	
Для сравнения двух коммитов, используется команда:
	git diff <...> <...> (где вместо <...> пишется индекс коммита)

	в)Удаление
Для демонстрации удаления, создадим  в каталоге проекта файл del.txt.
Проиндексируем и удалим его, с помощью следующих команд:
	git add del.txt
	git rm -f del.txt

	г)Перемещение
Для перемещения фалов, создадим дополнительный каталог, за счет команды:
	mkdir dop	
Также создадим новый файл, специально для перемещения mov.txt, инициализируем его и переместим:
	git  add mov.txt
	git mv mov.txt dop

9)Для рассмотрения принципом работы команды git log, запустим ее основные модификации.
Сама git log показывает историю создания коммитов в обратном порядке (сначала новые потом старые).
	git log -p отражают суть изменений коммитов, первая полностью
	git log -p --word-diff отражают суть изменений коммитов построчно.
	git log --stat показывает количество изменений, добавленных в коммит.

10)Для того, чтобы показать работу с метками установим их последний коммит, за счет команды:
	git tag -a <метка> <индекс> -m "комент" 
Чтобы просмотреть установленные метки, запустим команду:
	git tag
Чтобы просмотреть информацию о коммите по метке, запустим команду:
	git show <метка>


